/* CUSTOM PROPERTIES */

:root {
  font-size: 62.5%;

  /* common practice to add custom properties to the root element*/
  --antique-brass: #cb997e;
  --desert-sand: #ddbea9;
  --champagne-pink: #ffe8d6;
  --artichoke: #a5a58d;
  --dark-artichoke: #6b705c;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-size: 1.6rem;
  /* To use custom properties we need to call the var() function */
  background-color: var(--champagne-pink);
  color: var(--dark-artichoke);
}

h2 {
  background-color: var(--desert-sand);
  padding: 1rem;
}

/* GRID */

.container {
  display: grid;
  /* use grid-template-columns: to setup how many cols you need and their width */
  grid-template-columns: 30rem 30rem 30rem;
  /* the repeat function creates a number of cols/rows that exhibit a recurring pattern */
  grid-template-columns: repeat(3, 30rem);

  /* FRACTION */
  /* 
        fr represents a fraction of the available space in the grid 
        Very useful to avoid horizontal scrollbar issues
    */

  grid-template-columns: 1fr 3fr 2fr; /* you can specify different fraction values for each col */

  grid-template-columns: repeat(3, 1fr);

  /* Use gap property to add space between elements */
  gap: 0.5rem;
}

.container div {
  padding: 2rem;
  border: 1px solid var(--dark-artichoke);
  background-color: tomato;
  color: var(--champagne-pink);
}

/* WRAPPING COLS */

.containerWrap {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, auto));
  /*
    auto-fit will fit all items on the same row (if enough space is available)
    Otherwise the items will jump to the next row.
    using minmax() will set a minimum size for the items (in this case 150px)
    */
}

.containerWrap div {
  padding: 2rem;
  border: 1px solid dimgray;
  background-color: lightskyblue;
  color: antiquewhite;
}

/* ROWS and MIN-MAX */

.containerRows div {
  padding: 2rem;
  border: 1px solid black;
  background-color: blueviolet;
  color: antiquewhite;
}

.containerRows {
  display: grid;
  /* Add your cols */
  grid-template-columns: repeat(3, 1fr);

  /* 
    rows are automatically  generated based on the cols in your grid container.
    If you want to specify the number of rows and their respective height you use 
    grid-template-rows
    */
  /* grid-template-rows: 100px 200px 100px 300px; */

  /* MIN-MAX */
  /* to affect automatically generated rows you can use the grid-auto-rows property */
  grid-auto-rows: minmax(60px, auto);
  /*
    This means that automatically generated rows will have a min height of 60px and a max of auto
    (auto means that the height of the row will be based on its content)
    */

  column-gap: 1rem; /* to add space between cols */
  row-gap: 1rem; /* to add space between rows */
  gap: 2rem; /* shorthand for row-gap and column-gap */
  gap: 1rem 2rem;
}
